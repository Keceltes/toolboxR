% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/counting_and_summarizing_tables.R
\name{lookup.values}
\alias{lookup.values}
\title{Generate function to fetch the value from specified row/column}
\usage{
lookup.values(id)
}
\arguments{
\item{id}{Used during function creation to customize which df columns
are used for search. This can be a vector.}

\item{X}{Search term, this can be a vector}

\item{dat}{a data frame with both "id" and "field" columns}

\item{field}{the search column name}
}
\value{
value from field corresponding to search terms. This function
        can select multiple field values that are collapsed with
        separator to conserve dimensionality
}
\description{
A helper function to build df-specific search tools.
These functions are typically used in conjunction with lapply to
determine if they are present in a df.
}
\examples{
  df <- data.frame(Patient.ID = c("p1", "p1", "p2", "p2", "p3"),
                   Visit      = c(1,     2,    1,    2,    NA),
                   Test.Result= c("neg","pos","neg", NA,   "pos"),
                   stringsAsFactors = F)
   lookup_by_patientid <- lookup.values("Patient.ID")
   lookup_by_patientid("patient2", df, "Test.Result")
   # "negative"
   lookup_by_patientid("patient1", df, "Test.Result")
   # "negative; positive"

   lookup_by_id_and_visit <- lookup.values(id = c("Patient.ID", "Visit"))
   lookup_by_id_and_visit(X = c("patient1", 2), dat = df, field = "Test.Result")
   # "positive"

   # get results for all patients on their first visit
   p <- strsplit(paste(unique(df$Patient.ID),1, sep = ";"), split = ";")
   unlist(lapply(p, lookup_by_id_and_visit, dat = df, field = "Test.Result"))
   # "negative" "negative"
}

